#!/usr/bin/expect
# White Rabbit Pattern Generator
# take an STL from stdin, configure the times on the GPG, the states on the DIO FFIFO


set DS 6
set GBIT	0x01


if { $::argc > 0 } {
	foreach arg $::argv {
		set DS $::argv
		break
	}
}

puts "DS $DS"

array set gpg_stl {}
array set d32_stl {}

set ii 0
while { [gets stdin line] >= 0 } {
	incr ii
	if { [string length $line] < 3 } {
		continue
	} elseif { [string match "#*" $line] } {
		continue
	} elseif { [scan $line "%d,%x" usecs state] != 2 } {
		puts "STL ERROR at line $ii $line"
	} else {
#		puts [format "GOOD %d %x" $usecs $state]
		set gpg_stl($usecs) $GBIT
		set d32_stl([expr $ii - 1]) $state
	}
}

puts "gpg_stl"
foreach timeat [lsort -integer [array names gpg_stl]] {
	puts [format "%d,%02x" $timeat $gpg_stl($timeat)]
}

puts "d32_stl"
set ::env(STL2RAW_NOFILL) 1
set ffifo [open {|stl2raw > /tmp/ffifo} w]
foreach timeat [lsort -integer [array names d32_stl]] {
	puts $ffifo [format "%d,%08x" $timeat $d32_stl($timeat)]
	puts [format "%d,%08x" $timeat $d32_stl($timeat)]
}
close $ffifo



